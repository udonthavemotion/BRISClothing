BRISCO STREETWEAR - VERCEL PROJECT DOMAIN FIX CHECKLIST
========================================================

üö® PROBLEM: Multiple Vercel projects created, domain not on correct project
üéØ SOLUTION: Consolidate to one project with proper domain configuration

üìã STEP-BY-STEP FIX PROCESS:
----------------------------

1. IDENTIFY CORRECT VERCEL PROJECT:
   ‚ñ° Go to Vercel Dashboard (vercel.com/dashboard)
   ‚ñ° Find the project that should have www.brisclothing.com
   ‚ñ° Note the project name/URL

2. VERIFY DOMAIN CONFIGURATION:
   ‚ñ° In correct project: Settings > Domains
   ‚ñ° Ensure www.brisclothing.com is added as domain
   ‚ñ° Ensure brisclothing.com redirects to www.brisclothing.com
   ‚ñ° Check DNS records are pointing to Vercel

3. SET ENVIRONMENT VARIABLES IN CORRECT PROJECT:
   ‚ñ° Go to Settings > Environment Variables
   ‚ñ° Add: GHL_WEBHOOK_URL (REQUIRED)
      Value: https://services.leadconnectorhq.com/hooks/9Ax53jRuv9z4JsRTJ60V/webhook-trigger/901f9ecd-0af6-4b78-8353-8678f0510286
   ‚ñ° Set for: Production (and Preview if testing)

4. DEPLOY TO CORRECT PROJECT:
   ‚ñ° Connect GitHub repo to correct Vercel project
   ‚ñ° Deploy latest code with fixed API
   ‚ñ° Verify deployment URL matches www.brisclothing.com

5. CLEAN UP EXTRA PROJECTS:
   ‚ñ° Delete unused Vercel projects
   ‚ñ° Keep only the one with www.brisclothing.com domain

6. TEST THE FIXED SETUP:
   ‚ñ° Visit https://www.brisclothing.com
   ‚ñ° Enter email in authentication gate
   ‚ñ° Check browser Network tab for API call
   ‚ñ° Verify email is received via GHL
   ‚ñ° Test access code entry

üîß TECHNICAL FIXES APPLIED:
---------------------------
‚úÖ Added CORS headers to API endpoint
‚úÖ Fixed API response format
‚úÖ Improved error handling
‚úÖ Cleaned up webhook payload structure

üö® CRITICAL CHECKS:
-------------------
‚ñ° API endpoint returns 200 (not 404)
‚ñ° CORS headers present in response
‚ñ° GHL webhook receives payload
‚ñ° Email delivery works end-to-end

üìû VERCEL PROJECT COMMANDS:
---------------------------
# List all projects
vercel projects list

# Link to specific project
vercel link

# Deploy to specific project
vercel --prod

üîç DEBUGGING COMMANDS:
----------------------
# Test API locally
curl -X POST http://localhost:4321/api/send-access-email \
  -H 'Content-Type: application/json' \
  -d '{"email":"test@example.com"}'

# Test API in production
curl -X POST https://www.brisclothing.com/api/send-access-email \
  -H 'Content-Type: application/json' \
  -d '{"email":"test@example.com"}'

Expected Response:
{
  "ok": true,
  "success": true,
  "messageId": "webhook_triggered",
  "message": "Access email sent successfully",
  "provider": "ghl_webhook",
  "emailSent": true,
  "userMessage": "Check your email for the access code, then enter it below."
}

üéØ SUCCESS CRITERIA:
--------------------
‚ñ° www.brisclothing.com loads correctly
‚ñ° Authentication gate appears
‚ñ° Email submission returns success
‚ñ° GHL receives webhook payload
‚ñ° Access email is delivered
‚ñ° Access code grants entry to store

‚ö†Ô∏è ROLLBACK PLAN:
-----------------
If issues occur:
1. Revert API changes via git
2. Redeploy previous working version
3. Check Vercel function logs for errors
4. Verify environment variables are set

NOTES:
------
- Only ONE Vercel project should have the domain
- Environment variables must be set in the CORRECT project
- Test thoroughly after each change
- Keep GHL webhook URL secure and private
